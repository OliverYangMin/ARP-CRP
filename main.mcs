require '02Module.functions'
require '01Class.Flight'
require '01Class.Craft'
require '01Class.Port'
require '01Class.Master'
require '01Class.Label'
require '01Class.Column'
require '01Class.Evaluator'
minpq = require '03Algorithms.data.minpq'
--require 'mobdebug'.off()

flights, crafts, ports = getData()
for c,craft in pairs(crafts) do
    craft:createGraph()
end
    
  
evaluator = Evaluator:new()
columns = {}
for i=1,#flights do
    if flights[i].port1 == 'ZUUU' then
        columns[#columns+1] = Column:new({i,0},165)
    end 
end



repeat 
    local master = Master:new()
    master:WriteLP()
    master:lpSolve()
    master:updateSolution()
    master:setDuals()
    --require 'mobdebug'.on()
    for c,craft in pairs(crafts) do
        for i=1,#craft.nodes do
            craft.nodes[i].labels = {}
        end
    end 
    local not_opt = master:solveSubproblem()
    print(master.objective)
until not not_opt

local master = Master:new()
master:WriteLP()
master:integerSolve()
master:updateSolution()
print(master.objective)




